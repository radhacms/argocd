- job_name: prometheus
  scrape_interval: 1m
  scrape_timeout: 30s
  static_configs:
    - targets: ['localhost:9090']

- job_name: pushgateway
  scrape_interval: 1m
  scrape_timeout: 30s
  honor_labels: true

  metric_relabel_configs:
  - source_labels: [__name__]
    regex: '(findings|nodes|cases|time_spent_in_dashboard|time_spent_in_case|time_to_detect|time_to_detect_count|num_cases)'
    replacement: 1
    target_label: business_metric

  static_configs:
    - targets: ['pushgatewaylb.monitoring.svc.cluster.local:9091']

- job_name: investigator
  scrape_interval: 1m
  scrape_timeout: 30s
  file_sd_configs:
  - files:
    - "/etc/prometheus/config_out/tgroups/*.json"

- job_name: businessevents
  scrape_interval: 5m
  scrape_timeout: 240s
  kubernetes_sd_configs:
    - role: service

  relabel_configs:
    - source_labels: [__meta_kubernetes_service_name]
      action: keep
      regex: businessevents
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
      replacement: $1
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      regex: ([^:0-9]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
      separator: ;

- job_name: 'kubernetes-apiservers'
  scrape_interval: 1m
  scrape_timeout: 30s
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    server_name: kubernetes
    insecure_skip_verify: false

  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https



- job_name: 'kubernetes-nodes'
  scrape_interval: 1m
  scrape_timeout: 30s
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    server_name: kubernetes
    insecure_skip_verify: false

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  
  # If not, by default it uses authorized port 10250 instead the ready-only port 10255
  # and also uses https scheme #TODO
  scheme: https
  

- job_name: 'kubernetes-cadvisor'
  scrape_interval: 1m
  scrape_timeout: 30s
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: false

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __metrics_path__
    replacement: /metrics/cadvisor
  
  # If k8s:certified, by default it uses authorized port 10250 instead the ready-only port 10255
  # and also uses https scheme #TODO
  scheme: https
  


- job_name: 'kubernetes-pods'
  scrape_interval: 1m
  scrape_timeout: 30s
  honor_timestamps: true
  kubernetes_sd_configs:
  - role: pod

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    server_name: kubernetes
    insecure_skip_verify: false

  metric_relabel_configs:
  - source_labels: [__name__]
    regex: '(findings|nodes|cases|time_spent_in_dashboard|time_spent_in_case|time_to_detect|time_to_detect_count|num_cases)'
    replacement: 1
    target_label: business_metric

  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    action: replace
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_pod_name]
    action: replace
    target_label: kubernetes_pod_name
  - source_labels: [__meta_kubernetes_pod_label_solution]
    action: drop
    regex: Databus

- job_name: 'kubernetes-service-endpoints'
  scrape_interval: 1m
  scrape_timeout: 30s
  honor_timestamps: true
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    server_name: kubernetes
    insecure_skip_verify: false

  metric_relabel_configs:
  - source_labels: [__name__]
    regex: '(findings|nodes|cases|time_spent_in_dashboard|time_spent_in_case|time_to_detect|time_to_detect_count|num_cases)'
    replacement: 1
    target_label: business_metric

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    action: replace
    target_label: __scheme__
    regex: (https?)
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    target_label: __address__
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name
  - source_labels: [__meta_kubernetes_pod_host_ip]
    action: replace
    target_label: kubernetes_io_hostname
  - source_labels: [__meta_kubernetes_pod_host_ip]
    action: replace
    target_label: instance

- job_name: node-exporter-for-govcloud
  honor_timestamps: true
  scrape_interval: 1m
  scrape_timeout: 30s
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
    separator: ;
    regex: node-exporter
    replacement: $1
    action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    separator: ;
    regex: https
    replacement: $1
    action: keep
  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
    separator: ;
    regex: Node;(.*)
    target_label: node
    replacement: ${1}
    action: replace
  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
    separator: ;
    regex: Pod;(.*)
    target_label: pod
    replacement: ${1}
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    separator: ;
    regex: (.*)
    target_label: namespace
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    separator: ;
    regex: (.*)
    target_label: service
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_name]
    separator: ;
    regex: (.*)
    target_label: pod
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    separator: ;
    regex: (.*)
    target_label: job
    replacement: ${1}
    action: replace
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
    separator: ;
    regex: (.+)
    target_label: job
    replacement: ${1}
    action: replace
  - separator: ;
    regex: (.*)
    target_label: endpoint
    replacement: https
    action: replace
