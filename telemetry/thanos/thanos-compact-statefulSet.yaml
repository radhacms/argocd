apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database-compact
    app.kubernetes.io/instance: thanos-compact
    app.kubernetes.io/name: thanos-compact
    app: thanos-compact
  name: thanos-compact-ss
spec:
  replicas: 1 ##patch
  selector:
    matchLabels:
      app.kubernetes.io/component: database-compact
      app.kubernetes.io/instance: thanos-compact
      app.kubernetes.io/name: thanos-compact
  serviceName: thanos-compact
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database-compact
        app.kubernetes.io/instance: thanos-compact
        app.kubernetes.io/name: thanos-compact
        app: thanos-compact
    spec:
      serviceAccountName: prometheusthanos
      containers:
      - args:          ##patch
        - compact
        - --wait
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --data-dir=/var/thanos/compact
        - --retention.resolution-raw=$(COMPACT_RETENTION_RAW)
        - --retention.resolution-5m=$(COMPACT_RETENTION_5M)
        - --retention.resolution-1h=$(COMPACT_RETENTION_1H)
        - --deduplication.replica-label=prometheus_replica
        env:
        # - name: OBJSTORE_CONFIG            ##patch
        #   valueFrom:
        #     secretKeyRef:
        #       key: thanos.yaml
        #       name: thanos-objstore
        image: thanos
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 30
        name: thanos-compact
        ports:
        - containerPort: 10902
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
        resources:  ##patch
          limits:
            cpu: 1 
            memory: 1Gi 
          requests:
            cpu: 1
            memory: 1Gi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/thanos/compact
          name: data
          readOnly: false
      terminationGracePeriodSeconds: 120
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/component: database-compact
        app.kubernetes.io/instance: thanos-compact
        app.kubernetes.io/name: thanos-compact
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
