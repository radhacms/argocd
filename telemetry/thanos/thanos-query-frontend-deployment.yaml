apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-cache
    app.kubernetes.io/instance: thanos-query-frontend
    app.kubernetes.io/name: thanos-query-frontend
  name: thanos-query-frontend-deployment
spec:
  replicas: 1  ##patch
  selector:
    matchLabels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: thanos-query-frontend
      app.kubernetes.io/name: thanos-query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/component: query-cache
        app.kubernetes.io/instance: thanos-query-frontend
        app.kubernetes.io/name: thanos-query-frontend
        solution: addons
        service: telemetry
        app: thanos-query-frontend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - thanos-query-frontend
              namespaces:
              - monitoring  ## Patch
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:         ##Patch
        - query-frontend
        - --http-address=0.0.0.0:9090
        - --query-frontend.downstream-url=http://thanos-query.monitoring.svc.cluster.local:10902
        - --query-frontend.compress-responses
        - --query-range.partial-response
        image: thanos ## without tag , Patch
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          periodSeconds: 30
        name: thanos-query-frontend
        ports:
        - containerPort: 9090
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          periodSeconds: 5
        terminationMessagePolicy: FallbackToLogsOnError
      terminationGracePeriodSeconds: 120
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: telemetry-thanos-query-frontend-pdb
spec:
  maxUnavailable: 1
  selector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - thanos-query-frontend
